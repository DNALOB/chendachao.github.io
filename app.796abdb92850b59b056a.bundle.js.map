{"version":3,"sources":["webpack:///./src/app/utils/toasted.js","webpack:///./src/styles/main.css","webpack:///./src/app/utils/i18n.js","webpack:///./src/app/pwa.js","webpack:///./src/index.js"],"names":["commonConfig","position","theme","fullWidth","fitToScreen","toasted","Toasted","I18n","getDefaultLang","lang","localStorage","getItem","window","navigator","languages","language","browserLanguage","userLanguage","shortLang","indexOf","split","console","log","initialLocale","key","label","locale","messages","greeting","id","defaultMessage","description","format","opts","localeMsg","msg","IntlMessageFormat","render","i18nLabels","document","querySelectorAll","forEach","i18nLabel","i18nId","dataset","innerHTML","i18nAttr","attr","setAttribute","setLocale","setItem","getI18nMessages","url","axios","get","response","data","reformat","message","triggerLanguageHandler","init","languageBtn","querySelector","addEventListener","e","location","reload","i18n","isLocalhost","Boolean","hostname","match","register","config","process","registerValidSW","swUrl","serviceWorker","then","registration","onRegister","installingWorker","installing","state","controller","onUpdate","onSuccess","error","registrationError","checkValidServiceWorker","fetch","headers","contentType","status","ready","unregister","subscribeBtn","includes","Notification","permission","removeAttribute","requestPermission","result","pushManager","subscribe","userVisibleOnly","Error","action","text","onClick","showNotification","title","getRegistration","reg","options","body","icon","badge","updateReady","success","waitingServiceWorker","waiting","event","target","postMessage","type"],"mappings":"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","file":"app.796abdb92850b59b056a.bundle.js","sourcesContent":["import Toasted from 'toastedjs';\n\nimport 'toastedjs/dist/toasted.min.css';\n\nconst commonConfig = {\n  position: 'bottom-center',\n  theme: 'alive', // alive, colombo, venice, material, bootstrap, bulma\n  // icon : 'update',\n  fullWidth: true,\n  fitToScreen: false,\n};\n\nlet toasted = new Toasted({\n  ...commonConfig,\n});\n\n// toasted.show('New version available.');\n// toasted.success('New version available.');\n// toasted.error('New version available.');\n// toasted.info('New version available.');\n\nexport default toasted;\n","// extracted by mini-css-extract-plugin\nexport {};","import IntlMessageFormat from 'intl-messageformat';\nimport axios from 'axios';\n\nconst I18n = () => {\n  const getDefaultLang = function () {\n    let lang = localStorage.getItem('lang') || (window.navigator.languages && window.navigator.languages[0]) || null;\n    lang = lang || window.navigator.language || window.navigator.browserLanguage || window.navigator.userLanguage;\n\n    let shortLang = lang;\n    if (shortLang.indexOf('-') !== -1) shortLang = shortLang.split('-')[0];\n    if (shortLang.indexOf('_') !== -1) shortLang = shortLang.split('_')[0];\n\n    console.log(lang, shortLang);\n    return shortLang;\n  };\n\n  const initialLocale = getDefaultLang() || 'en';\n  const languages = [\n    {\n      key: 'en',\n      label: 'English',\n    },\n    {\n      key: 'zh',\n      label: 'Chinese',\n    },\n  ];\n\n  let locale = initialLocale;\n  const messages = {};\n  const greeting = {\n    id: 'app.greeting',\n    defaultMessage: 'Hello, {name}!',\n    description: 'Greeting to welcome the user to the app',\n  };\n\n  function format(key, opts) {\n    opts = opts || {};\n\n    const localeMsg = messages[locale];\n\n    var msg = new IntlMessageFormat(localeMsg[key], locale);\n    return msg.format(opts);\n  }\n\n  function render() {\n    // Change label\n    const i18nLabels = document.querySelectorAll('*[data-i18n-id]');\n    i18nLabels.forEach(i18nLabel => {\n      const {i18nId} = i18nLabel.dataset;\n      i18nLabel.innerHTML = format(i18nId);\n    });\n\n    // Change attr like tooltip\n    document.querySelectorAll('*[data-i18n-attr]').forEach(i18nLabel => {\n      const {i18nAttr} = i18nLabel.dataset;\n      const attr = i18nAttr.split('=');\n      i18nLabel.setAttribute(attr[0], format(attr[1]));\n    });\n  }\n\n  function setLocale(lang) {\n    locale = lang;\n    localStorage.setItem('lang', lang);\n  }\n\n  const getI18nMessages = async lang => {\n    const url = `/assets/i18n/${lang}.json`;\n    let response;\n    try {\n      response = await axios.get(url);\n    } catch (error) {\n      response = await axios.get('/assets/i18n/en.json'); // fallback to en\n    }\n    return response.data;\n  };\n\n  async function reformat(lang) {\n    const message = await getI18nMessages(lang);\n    messages[lang] = message;\n    render();\n  }\n\n  const triggerLanguageHandler = function () {\n    setLocale(locale);\n    reformat(locale);\n  }\n\n  function init() {\n    triggerLanguageHandler(initialLocale);\n    const languageBtn = document.querySelector('.language-btn');\n    languageBtn.addEventListener('click', function (e) {\n      locale = locale === 'en' ? 'zh' : 'en';\n      triggerLanguageHandler(locale);\n      window.location.reload();\n    });\n  }\n\n  return {\n    init,\n    format,\n    locale\n  }\n};\n\nconst i18n = I18n();\n\nexport default i18n;\n","\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL || '', window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const PUBLIC_URL = process.env.PUBLIC_URL || '';\n      const swUrl = `${PUBLIC_URL}/sw.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' + 'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      // execute onRegister callback\n      config && config.onRegister && config.onRegister(registration);\n      // check update\n      // registration.update();\n      registration.addEventListener('updatefound', () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n\n        installingWorker.addEventListener('statechange', () => {\n          // Has network.state changed!\n          console.log('statechange', installingWorker.state);\n          switch (installingWorker.state) {\n            case 'installed':\n              if (navigator.serviceWorker.controller) {\n                // new update available\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // no update available\n                console.log('Content is cached for offline use.', installingWorker.state);\n\n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n              break;\n            case 'redundant':\n              console.error('The installing service worker became redundant.');\n              break;\n            // default:\n            //   console.log('installingWorker.state', installingWorker.state);\n            //   break;\n          }\n        });\n      });\n    })\n    .catch(registrationError => {\n      console.log('SW registration failed: ', registrationError);\n    });\n\n    // // When the user asks to refresh the UI, we'll need to reload the window\n    // navigator.serviceWorker.addEventListener('message', event => {\n    //   console.log('reload-window', event.data);\n    //   if (!event.data) {\n    //     return;\n    //   }\n    //   switch (event.data) {\n    //     case 'reload-window':\n    //       // window.location.reload();\n    //       break;\n    //     default:\n    //       // NOOP\n    //       break;\n    //   }\n    // });\n\n    // auto refresh to update when new version is available\n    // var refreshing;\n    // navigator.serviceWorker.addEventListener('controllerchange', () => {\n    //   if (refreshing) {\n    //     return;\n    //   }\n    //   refreshing = true;\n    //   window.location.reload();\n    // });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// es6 generator support\nimport '@babel/polyfill';\n\nimport toasted from './app/utils/toasted';\nimport i18n from './app/utils/i18n';\n// import(/* webpackPrefetch: true */'./app/pwa');\nimport(/* webpackPreload: true */'./app/main');\nimport 'normalize.css';\nimport './styles/main.css';\nimport(/* webpackPreload: true */'./styles/override.css');\n\nimport * as serviceWorker from './app/pwa';\n\nconst format = i18n.format;\n\nserviceWorker.register({\n  onRegister: registration => {\n    var subscribeBtn = document.querySelector('.subscribe-btn');\n    if(['default', 'denied'].includes(Notification.permission)) {\n      subscribeBtn.removeAttribute('hidden');\n    }\n    \n    // subscribe push notifications\n    subscribeBtn.addEventListener('click', async () => {\n      try {\n        const result = await Notification.requestPermission();\n        if (result === 'granted') {\n          subscribeBtn.setAttribute('hidden', '');\n          // navigator.serviceWorker.getRegistration().then(function (reg) {\n          //   // Show Local Notification\n          //   reg.pushManager.subscribe({ userVisibleOnly: true });\n          // });\n          // Show Local Notification\n          registration.pushManager.subscribe({ userVisibleOnly: true });\n        } else {\n          throw new Error('Notifications blocked. Please enable them in your browser.');\n        }\n      } catch (error) {\n        toasted.error(error, { \n          action: {\n            text: 'X',\n            onClick: (e, toasted) => {\n              toasted.delete();\n            },\n          },\n        });\n        console.log('Notifications error', error);\n      }\n    });\n  },\n  onUpdate: registration => {\n    // registration.unregister().then(() => {\n    //   window.location.reload();\n    // })\n\n    function showNotification(title, message) {\n      if (Notification.permission === 'granted') {\n        navigator.serviceWorker.getRegistration().then(function(reg) {\n          const options = {\n            body: message,\n            // TODO: these image cna't work\n            icon: '/images/bell.svg',\n            badge: '/images/notification.svg',\n          };\n          // Show Local Notification\n          reg.showNotification(title, options);\n        });\n      }\n    }\n\n    const updateReady = function () {\n      showNotification(format('APP.NEW_VERSION_TITLE'), format('APP.NEW_VERSION_CONTENT'));\n      toasted.success(format('APP.NEW_VERSION_TITLE'), {\n          action: {\n            text: 'Update',\n            onClick: (e, toasted) => {\n              window.location.reload();\n            },\n          },\n      });\n    }\n\n    const waitingServiceWorker = registration.waiting;\n    if(waitingServiceWorker) {\n      waitingServiceWorker.addEventListener('statechange', event => {\n        console.log('onUpdate statechange', event.target.state);\n        if(event.target.state === 'activated') {\n          updateReady();\n        }\n      });\n\n      waitingServiceWorker.postMessage({ type: \"SKIP_WAITING\" });\n    }\n  },\n  onSuccess: registration => {\n    console.log(\"registered app for offline use. details:\", registration);\n  }\n});\n \n\n"],"sourceRoot":""}